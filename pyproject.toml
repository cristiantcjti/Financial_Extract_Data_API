[project]
name = "financial-api"
version = "0.1.0"
description = "Django API for financial data extraction from OFDA API"
authors = [
    {name = "Financial API Team", email = "team@financialapi.com"},
]
dependencies = [
    "django>=5.1.0",
    "django-ninja>=1.3.0",
    "django-ninja-extra>=0.21.0",
    "django-ninja-jwt>=5.3.0",
    "pydantic>=2.2.0",
    "dataclasses-json>=0.6.0",
    "python-decouple>=3.8",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    "django-redis>=5.4.0",
    "celery>=5.3.0",
    "requests>=2.31.0",
    "gunicorn>=23.0.0",
    "django-health-check>=3.18.0",
    "cryptography>=41.0.0",
    "pre-commit>=4.2.0",
    "setuptools>=80.9.0",
    "pytest>=8.4.1",
    "pytest-django>=4.11.1",
    "pytest-cov>=6.2.1",
]
requires-python = ">=3.12"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.5.0",
    "black>=23.0.0",
    "pre-commit>=3.4.0",
    "factory-boy>=3.3.0",
    "responses>=0.23.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
include = ['api/**.py']
line-length = 79

[tool.ruff.lint]
select = [
  "E",
  "F",
  "I",
  "N",
  "C90",
  "UP",
  "YTT",
  "ASYNC",
  "S",
  "A",
  "B",
  "FBT",
  "BLE",
  "COM",
  "C4",
  "T10",
  "ANN",
]
ignore = ["COM812", "E501", "ANN401"]


[tool.ruff.lint.extend-per-file-ignores]
"api/tests/**/*.py" = [
  # at least this three should be fine in tests:
  "S101", # asserts allowed in tests...
  "ARG",  # Unused function args -> fixtures nevertheless are functionally relevant...
  "FBT",  # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
  # The below are debateable
  "PLR2004", # Magic value used in comparison, ...
  "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
  "ANN",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "src.config.test_settings"
addopts = "-ra"
python_files = ["test_*.py", "*_test.py", "tests.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = "."
testpaths = ["src/tests"]


[tool.coverage.run]
source = ["src"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "manage.py",
    "*/settings/*",
    "*/config/wsgi.py",
    "*/config/asgi.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pyright]
venvPath = "."
venv = ".venv"
